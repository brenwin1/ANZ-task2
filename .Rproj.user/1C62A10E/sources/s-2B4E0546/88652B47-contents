---
title: "ANZ_virtual_internship"
author: "Brenwin"
date: "07/07/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# load libraries
library(tidyverse)
library(readxl) # to read in excel files
library(naniar)
library(lubridate)
library(ggpp)
library(patchwork)
```

# Read in Data
```{r}
data <- readxl::read_xlsx("data/ANZ synthesised transaction dataset.xlsx")

data_explore <- data
```

# Exploratory Data Analysis 

## Data issues? Require cleaning?

### skim data 
```{r}
skimr::skim(data_explore)
```
- 12043 transactions(rows)  
  - over 3 months: from 2018-08-01 to 2018-10-31 

- 4,326 rows of merchant information missing `merchant_id`, `merchant_suburb`, `merchant_state`, `merchant_long_lat`

- `currency` column; shows; all tranactions; carried out in AUD

- many missings; in `bpay_biller_code` & `merchant_code`
  - less than 1% of data available
  - valued either NA or 0 
  *redundant variable 

- all `movement` == "credit" transctions; are `txn_description` == "PAY/SALARY"

- variable names; correctly & consistently formatted
  - space delimited by "_" & all in small letters
  
**data seems relatively clean; other than `card_present_flag` should be a categorical instead of a numeric variable**

### missing values
```{r}
naniar::vis_miss(data_explore,
                 cluster = TRUE,
                 sort_miss = TRUE)
```

in terms of missing data 
- mostly missing information about merchants
- `bpay_biller_code` and `merchant_code` mostly missing

**no structure appear to exist; in missing values**


## overall insights of data
```{r}
data_explore <- data_explore %>% 
  # put date bfeore account
  dplyr::relocate(date,
                  .before = account) %>% 
  # include month// week// day 
  mutate(month = lubridate::month(date),
         week = lubridate::week(date),
         wday = lubridate::wday(date,
                                label = TRUE),
         mday = lubridate::mday(date),
         .after = date) 
```

### density of transactions each month *trimming to deal with extreme amounts 
```{r}
data_explore <- data_explore %>% 
  # trim 10% of extreme observations
  mutate(extreme = case_when(
    amount >= quantile(amount, 0.90) ~ "upper 10%",
    amount <= quantile(amount, 0.05) ~ "lower 5%",
    TRUE ~ "Majority"
  )) 

data_explore %>% 
  ggplot(aes(x = "",
             y = amount)) +
  ggbeeswarm::geom_quasirandom(aes(color = extreme)) +
  coord_flip() +
  scale_y_continuous(breaks = seq(from = 0, to = 9000, by = 500)) +
  ggplot2::scale_colour_manual(name = "Kmeans groups",
                               values = c("#ff69b4", "#1e90ff", "#ffbf00"),
                               labels = c("Group 1", "Group 2", "Group 3")) +
  ggtitle("Classifying accounts into 3 clusters") +
  theme_minimal() +
  # background
  theme(panel.background = element_rect(fill = "grey35"),
        plot.background = element_rect(fill = "grey35")) +
  # legend
  theme(legend.position = "right",
        legend.background = element_blank(),
        legend.key = element_blank(),
        legend.text = element_text(colour = "sky blue"),
        legend.title = element_text(colour = "sky blue")) + 
  # plot title & subtitle
  theme(plot.title = element_text(size = 20,
                                  face = "bold", 
                                  colour = "sky blue"),
        plot.subtitle = element_text(size = 16, 
                                     colour = "sky blue")) +
  # axis 
  theme(axis.text = element_blank(),
        axis.title = element_text(colour = "sky blue",
                                  size = 15)) + 
  theme_bw()
```

- most of the transactions; for low amounts (<$200)
  - only 10% of the transactions; are for amounts more $200
  - there were a number of $0.10 transactions; removing 5% at the lower tail remove these extreme outliers
  
**trimmed 10% of observations (remaining observations; are transactions for amounts < $200)**
  
```{r}
## density plot 
p1 <- data_explore %>% 
  filter(extreme == "Majority") %>% 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..),
               fill = "steel blue") +
  scale_x_continuous(breaks = seq(from = 0, to = 200, by = 10)) +
  theme_bw() 
  

## five number summary
fivenum_table <- data_explore %>% 
  filter(extreme == "Majority") %>% 
  summarise(values = fivenum(amount)) %>% 
  mutate(quantiles = c("min", "1st Quantile", "median", "3rd Quantile", "max"),
         .before = values)

p1 +
  ggpp::geom_table(data = fivenum_table,
                   inherit.aes = TRUE,
                   mapping = aes(x = 180,
                                 y = 0.03,
                                 label = list(fivenum_table)),
                   size = 10) 
```

- majority of the transactions are for amounts \$15 to \$30.
- increasingly lower density in the higher amounts

```{r}
fivenum_months <- data_explore %>% 
  filter(extreme == "Majority") %>% 
  group_by(month) %>% 
  summarise(values = fivenum(amount)) %>% 
  mutate(quantiles = c("min", "1st Quantile", "median", "3rd Quantile", "max"),
         .before = values)

## density plot 
month_8 <- data_explore %>% 
  filter(extreme == "Majority",
         month == 8) %>% 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..),
               fill = "steel blue") +
  scale_x_continuous(breaks = seq(from = 0, to = 200, by = 10)) +
  theme_bw() +
  ggpp::geom_table(data = fivenum_months,
                   inherit.aes = TRUE,
                   mapping = aes(x = 180,
                                 y = 0.03,
                                 label = list(fivenum_months[1:5,-1])),
                   size = 10) 

month_9 <- data_explore %>% 
  filter(extreme == "Majority",
         month == 9) %>% 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..),
               fill = "steel blue") +
  scale_x_continuous(breaks = seq(from = 0, to = 200, by = 10)) +
  theme_bw() +
  ggpp::geom_table(data = fivenum_months,
                   inherit.aes = TRUE,
                   mapping = aes(x = 180,
                                 y = 0.03,
                                 label = list(fivenum_months[6:10,-1])),
                   size = 10) 

month_10 <- data_explore %>% 
  filter(extreme == "Majority",
         month == 10) %>% 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..),
               fill = "steel blue") +
  scale_x_continuous(breaks = seq(from = 0, to = 200, by = 10)) +
  theme_bw() +
  ggpp::geom_table(data = fivenum_months,
                   inherit.aes = TRUE,
                   mapping = aes(x = 180,
                                 y = 0.03,
                                 label = list(fivenum_months[11:15,-1])),
                   size = 10) 

require(patchwork)
month_8 / month_9 / month_10
```
- densities; look very similar; over three months 

**transaction amounts; very similar; over the three mounts**

### no. of transactions customers make each month; on avg.

```{r}
data_explore %>% 
  group_by(month) %>% 
  summarise(no_transactions = n()) %>% 
  ggplot(aes(x = factor(month),
             y = no_transactions,
             color = factor(month))) +
  geom_point(size = 2) +
  geom_line(aes(group = 1),
            colour = "black",
            alpha = 0.3,
            linetype = 2) +
  labs(x = "Month",
       y = "Number of transactions",
       title = "Total number of transactions over the months") +
  colorspace::scale_color_discrete_qualitative(name = "Month",
                                               labels = c("8 (Aug)", "9 (Sep)", "10 (Oct)")) + # change legend labels 
  theme_bw() 
  

```

- almost a linear albeit relatively small increase in number of transactions over the month 
- Month 8 sees the least no. of transactions (3943)// Month 10; most transactions (4087)


```{r}
data_explore %>% 
  group_by(month, movement) %>% 
  summarise(no_transactions = n()) %>% 
  ungroup() %>% 
  ggplot(aes(x = factor(month),
             y = no_transactions,
             colour = factor(month),
             group = movement)) +
  geom_point() +
  geom_line(colour = "black",
            linetype = 2,
            alpha = 0.3) +
  facet_wrap(~movement,
             nrow = 2,
             scales = "free_y")
```

from month 8 to 9 
- no. of debit transactions increased significantly; 
- no. of credit transactions decreased

 from month 9 to 10
 - no. of credit transactions increased significantly
 - no. of debit transactions; only increased slightly 

### do people spend more with higher salary amounts?
```{r}
data_explore %>% 
  group_by(account, month) %>% 
  ggplot() +
  geom_col(aes(x = account,
               y = amount,
               fill = factor(month)),
           position = "dodge") +
  coord_flip() +
  facet_wrap(~movement,
             ncol = 1) + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90)) +
  colorspace::scale_color_discrete_qualitative()
```

Looking across all accounts; most outliers; appear to occur in October

> bar plots; with multiple axes; facing each other?

### segment data; by transaction date & time

```{r}
# --- extract date time; from `extraction` column

data_explore1 <- data_explore %>% 
  # extract time from `extraction`
  separate(extraction,
           into = c("date1", "time"),
           sep = "T")  
  
# remove milliseconds from time
data_explore1$time <- stringr::str_remove(string = data_explore1$time, 
                                          pattern = "\\..+") # remove everything; after "."

# combine `date1` `time` column; into date_time 
data_explore1 <- data_explore1 %>% 
  tidyr::unite(col = date_time,
               c(date1, time),
               sep = " ")

# change `date_time` column type; as_datetime
data_explore1$date_time <- as_datetime(data_explore1$date_time)

# --- add hour column
data_explore1 <- data_explore1 %>% 
  mutate(hour = lubridate::hour(date_time),
         .after = mday)
```


#### visualise transaction volume & spending; over course of avg. day of the month(1-31)// day of the week(Mon-Fri)// day (24 hours)
```{r}
# --- day in the month 

# transaction volume i.e. no. of transactions (geom_bar)
p1 <- data_explore1 %>% 
  group_by(mday) %>% 
  ggplot() +
  geom_bar(aes(x = mday,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 1, to = 31, by = 1)) +
  labs(title = "Transaction Volume",
       subtitle = "Day of the month") +
  colorspace::scale_fill_discrete_qualitative() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 30,
                                  face = "bold")) 

# transaction spending i.e. amount (geom_col)
p2 <- data_explore1 %>% 
  group_by(mday) %>% 
  ggplot() +
  geom_col(aes(x = mday,
               y = amount,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 1, to = 31, by = 1)) +
  labs(title = "Transaction Amount",
       subtitle = "Day of the month") +
  scale_y_continuous(label = scales::dollar_format()) +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 30,
                                  face = "bold")) +
  theme(legend.position = "none")
```

```{r}
# --- day of the week

# transaction volume i.e. no. of transactions (geom_bar)
p3 <- data_explore1 %>% 
  ggplot() +
  geom_bar(aes(x = wday,
               fill = movement)) +
  ggtitle("Day of the week") +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() +
  theme(legend.position = "none")
  

# transaction spending i.e. amount (geom_col)
p4 <- data_explore1 %>% 
  ggplot() +
  geom_col(aes(x = wday,
               y = amount,
               fill = movement)) +
  ggtitle("Day of the week") +
  scale_y_continuous(label = scales::dollar_format()) +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() +
  theme(legend.position = "none")
```


```{r}
# --- time of day

# transaction volume i.e. no. of transactions (geom_bar)
p5 <- data_explore1 %>% 
  ggplot() +
  geom_bar(aes(x = hour,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 23, by = 1)) +
  ggtitle("By the hour") +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() +
  theme(legend.position = "none")

# transaction spending i.e. amount (geom_col)
p6 <- data_explore1 %>% 
  group_by(hour) %>% 
  ggplot() +
  geom_col(aes(x = hour,
               y = amount,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 23, by = 1)) +
  ggtitle("By the hour") +
  scale_y_continuous(label = scales::dollar_format()) +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() +
  theme(legend.position = "none")

# patchwork
require(patchwork)
(p1 + p2) / (p3 + p4) / (p5 + p6) +
  patchwork::plot_layout(guides = "collect") 
```

- interestingly; 16 of each month sees the lowest transaction volume & spending
  - upon investigation; this was because no transactinos occured on August 16
- also; October has only 30 days; so see less transactions  

- Also; credit transactions; ALL occur between 11am & 5pm and Mondays to Friday
- debit transactions occur all week and throungout the day
  - although generally; transactions peak in working hours 9-5pm and are more erratic at other times


```{r investigation, include=FALSE}
data_explore1 %>% 
  group_by(mday) %>% 
  ggplot() +
  geom_bar(aes(x = mday,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 31, by = 1)) +
  facet_wrap(~month,
             ncol = 1) +
  ggtitle("transaction volume; day in the month") +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() 
```

#### for upper 10%
```{r}
# --- day in the month 

# transaction volume
p1 <- data_explore1 %>% 
  filter(extreme == "upper 10%") %>% 
  group_by(mday) %>% 
  ggplot() +
  geom_bar(aes(x = mday,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 31, by = 1)) +
  labs(title = "Transaction Volume",
       subtitle = "Day of the month") +
  colorspace::scale_fill_discrete_qualitative() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 30,
                                  face = "bold"))

# transaction spending 
p2 <- data_explore1 %>% 
  filter(extreme == "upper 10%") %>% 
  group_by(mday) %>% 
  ggplot() +
  geom_col(aes(x = mday,
               y = amount,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 31, by = 1)) +
  labs(title = "Transaction Amount",
       subtitle = "Day of the month") +
  scale_y_continuous(label = scales::dollar_format()) +
  colorspace::scale_fill_discrete_qualitative() +
  theme(plot.title = element_text(hjust = 0.5,
                                  size = 30,
                                  face = "bold"))
```

```{r}
# --- time of day

# transaction volume
p3 <- data_explore1 %>% 
  filter(extreme == "upper 10%") %>% 
  ggplot() +
  geom_bar(aes(x = hour,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 31, by = 1)) +
  ggtitle("transaction volume; hourly") +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() 

# transaction amount
p4 <- data_explore1 %>% 
  filter(extreme == "upper 10%") %>% 
  group_by(hour) %>% 
  ggplot() +
  geom_col(aes(x = hour,
               y = amount,
               fill = movement)) +
  scale_x_continuous(breaks = seq(from = 0, to = 31, by = 1)) +
  ggtitle("transaction amount; hourly") +
  scale_y_continuous(label = scales::dollar_format()) +
  theme_bw() +
  colorspace::scale_fill_discrete_qualitative() 

# patchwork
(p1 + p2) / (p3 + p4) +
  patchwork::plot_layout(guides = "collect")
```

### insights; from location 

#### K-means algorithm
```{r}
# --- separate `long_lat` into 2 columns `lon` & `lat`
data_explore2 <- data_explore1 %>% 
  tidyr::separate(col = long_lat,
                  sep = " -",
                  into = c("lon", "lat")) %>% 
  # turn `lon` & `lat`; into numeric 
  mutate(lon = as.numeric(lon),
         lat = as.numeric(lat))

data_explore2 %>% 
  ggplot() +
  geom_point(aes(x = lon,
                 y = lat))

# run k-means (unsupervised classificaiton)
# -> group observations into k = 3 groups 
data_explore2$kmeans <- stats::kmeans(base::scale(data_explore2[,c(12,13)]),
                                      centers = 3,  # k = 3 groups
                                      nstart = 10)$cluster # no. of random starts *for robustness 

data_explore2 %>% 
  ggplot() +
  geom_point(aes(x = lon,
                 y = lat,
                 colour = factor(kmeans))) +
  ggplot2::scale_colour_manual(name = "Kmeans groups",
                               values = c("#ff69b4", "#1e90ff", "#ffbf00"),
                               labels = c("Group 1", "Group 2", "Group 3")) +
  ggtitle("Classifying accounts into 3 clusters") +
  theme_minimal() +
  # background
  theme(panel.background = element_rect(fill = "grey35"),
        plot.background = element_rect(fill = "grey35")) +
  # legend
  theme(legend.position = "right",
        legend.background = element_blank(),
        legend.key = element_blank(),
        legend.text = element_text(colour = "sky blue"),
        legend.title = element_text(colour = "sky blue")) + 
  # plot title & subtitle
  theme(plot.title = element_text(size = 20,
                                  face = "bold", 
                                  colour = "sky blue"),
        plot.subtitle = element_text(size = 16, 
                                     colour = "sky blue")) +
  # axis 
  theme(axis.text = element_blank(),
        axis.title = element_text(colour = "sky blue",
                                  size = 15)) 
```

- Running k-means algorithm (unsupervised classification); 3 groups are identified
  - group 1(pink): 9702 observations *in South South West region
  - group 2(green): 123 observations *in North East region
  - group 3(blue): 2218 observations *in South West region; but more towards 

#### density of spending amounts from each cluster  
```{r}
data_explore2 %>% 
  # filter to majority of transactions
  filter(extreme == "Majority") %>% 
  # density plot 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..,
                   group = factor(kmeans),
                   fill = factor(kmeans)),
               alpha = 0.3) +
  colorspace::scale_fill_discrete_qualitative(name = "Kmeans groups",
                                              labels = c("Group 1", "Group 2", "Group 3")) +
  theme_bw() +
  ggtitle("Overall spending in each cluster")
```

- plotting the spending amounts of the 3 clusters
  - can ascertain; Group 1 & 3 have similar spending habits
  - while group 2; tend to spend higher amounts on average

#### does any cluster; have higher tendency to spend extreme amounts?
```{r}
data_explore2 %>% 
  group_by(kmeans) %>% 
  mutate(extreme = case_when(
    amount >= quantile(amount, 0.90) ~ "upper 10%",
    amount <= quantile(amount, 0.05) ~ "lower 5%",
    TRUE ~ "Majority"
  )) %>% 
  filter(extreme == "upper 10%") %>% 
  ggplot() +
  geom_density(aes(x = amount,
                   y = ..density..,
                   group = factor(kmeans),
                   fill = factor(kmeans)),
               alpha = 0.4) +
  colorspace::scale_fill_discrete_qualitative(name = "Kmeans groups",
                                              labels = c("Group 1", "Group 2", "Group 3")) +
  theme_bw() +
  ggtitle("Top spendings in each cluster")
```

