(total_spend_pr + total_spend_vol_pr + balance_pr) / (gender_pr + age_pr) +
plot_layout(heights = 1,
widths = 1,
ncol = 2)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2,
guides = "collect")
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(title = "partial residual plot")
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(title = "partial residual plots")
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(title = "partial residual plots",
theme = theme_gray(base_family = "mono"))
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono",
size = 3), # set title font
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono",
size = 3) # set title font
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono",
base_size = 3) # set title font
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono",
base_size = 13) # set title font
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13) # set font size
# tags
tag_levels = "I" # uppercase roman numerics
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I" # uppercase roman numerics
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
lm_visreg <- fit_lm %>%
visreg::visreg(gg = T)
# --- partial residual plots
# `annual_sal` vs. `total_spend`
total_spend_pr <- lm_visreg[[1]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `total_spend_volume`
total_spend_vol_pr <- lm_visreg[[2]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending volume",
y = "") +
theme_bw()
# `annual_sal` vs. `total_spend`
balance_pr <- lm_visreg[[3]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "closing balance",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `gender`
gender_pr <- lm_visreg[[4]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "gender",
y = "") +
theme_bw()
# `annual_sal` vs. `age`
age_pr <- lm_visreg[[5]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "age",
y = "annual salary") +
theme_bw()
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
install.packages("jtools")
jtools::summ(fit)
jtools::summ(fit_lm)
library(jtools)
library(kableExtra)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
jtools::summ(fit)
jtools::summ(fit_lm)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
install.packages("gt_summary")
remotes::install_github("ddsjoberg/gtsummary")
gtsummary
library(gtsummary)
gtsummary::tbl_regression()
fit_lm %>%
gtsummary::tbl_regression()
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
lm_visreg <- fit_lm %>%
visreg::visreg(gg = T)
# --- partial residual plots
# `annual_sal` vs. `total_spend`
total_spend_pr <- lm_visreg[[1]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `total_spend_volume`
total_spend_vol_pr <- lm_visreg[[2]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending volume",
y = "") +
theme_bw()
# `annual_sal` vs. `balance`
balance_pr <- lm_visreg[[3]] +
scale_y_continuous(labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format())
labs(x = "closing balance",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `gender`
gender_pr <- lm_visreg[[4]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "gender",
y = "") +
theme_bw()
# `annual_sal` vs. `age`
age_pr <- lm_visreg[[5]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "age",
y = "annual salary") +
theme_bw()
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
# `annual_sal` vs. `balance`
balance_pr <- lm_visreg[[3]] +
scale_y_continuous(labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(x = "closing balance",
y = "annual salary") +
theme_bw()
lm_visreg <- fit_lm %>%
visreg::visreg(gg = T)
# --- partial residual plots
# `annual_sal` vs. `total_spend`
total_spend_pr <- lm_visreg[[1]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `total_spend_volume`
total_spend_vol_pr <- lm_visreg[[2]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending volume",
y = "") +
theme_bw()
# `annual_sal` vs. `balance`
balance_pr <- lm_visreg[[3]] +
scale_y_continuous(labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(x = "closing balance",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `gender`
gender_pr <- lm_visreg[[4]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "gender",
y = "") +
theme_bw()
# `annual_sal` vs. `age`
age_pr <- lm_visreg[[5]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "age",
y = "annual salary") +
theme_bw()
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
lm_visreg <- fit_lm %>%
visreg::visreg(gg = T)
# --- partial residual plots
# `annual_sal` vs. `total_spend`
total_spend_pr <- lm_visreg[[1]] +
scale_y_continuous(labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(x = "total spending",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `total_spend_volume`
total_spend_vol_pr <- lm_visreg[[2]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "total spending volume",
y = "") +
theme_bw()
# `annual_sal` vs. `balance`
balance_pr <- lm_visreg[[3]] +
scale_y_continuous(labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(x = "closing balance",
y = "annual salary") +
theme_bw()
# `annual_sal` vs. `gender`
gender_pr <- lm_visreg[[4]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "gender",
y = "") +
theme_bw()
# `annual_sal` vs. `age`
age_pr <- lm_visreg[[5]] +
scale_y_continuous(labels = scales::dollar_format()) +
labs(x = "age",
y = "annual salary") +
theme_bw()
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 2) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
fit_lm <- stats::lm(annual_sal ~ total_spend + total_spend_vol + balance + gender + age,
data = model_data)
fit_lm %>%
gtsummary::tbl_regression()
fit_lm <- stats::lm(annual_sal ~ total_spend + total_spend_vol + balance + gender + age,
data = model_data)
fit_lm %>%
gtsummary::tbl_regression()
# --- patchwork
total_spend_pr + total_spend_vol_pr + balance_pr + gender_pr + age_pr +
plot_layout(heights = 1,
widths = 1,
ncol = 3) +
plot_annotation(
# add title
title = "partial residual plots",
theme = theme_gray(base_family = "mono", # set font family
base_size = 13), # set font size
# tags
tag_levels = "I", # uppercase roman numerics
tag_prefix = "(",
tag_suffix = ")"
)
fit_lm <- stats::lm(annual_sal ~ total_spend + total_spend_vol + balance + gender + age,
data = model_data)
fit_lm %>%
gtsummary::tbl_regression()
fit_lm %>%
gtsummary::tbl_regression() %>%
gtsummary::add_glance_source_note()
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- model specification: regression tree
rpart_mod <- parsnip::decision_tree() %>%
set_engine("rpart") %>% # set computational engine
set_mode("regression") %>% # set model mode: regression *instead of classification
translate() # translate model specification; into code object; specific to particular engine (R package)
# --- fit the regression tree
fit_tree <- rpart_mod %>%
parsnip::fit(annual_sal ~ total_spend + total_spend_vol + lon + lat + balance + gender + age,
data = model_data)
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
split
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
```{r rpart-tree, fig.height=5, fig.width=10}
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
```{r rpart-tree, fig.height=5, fig.width=10}
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- model specification: regression tree
rpart_mod <- parsnip::decision_tree() %>%
set_engine("rpart") %>% # set computational engine
set_mode("regression") %>% # set model mode: regression *instead of classification
translate() # translate model specification; into code object; specific to particular engine (R package)
# --- fit the regression tree
fit_tree <- rpart_mod %>%
parsnip::fit(annual_sal ~ total_spend + total_spend_vol + balance + gender + age,
data = model_data)
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
```{r rpart-tree, fig.height=7, fig.width=10}
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
```{r rpart-tree, fig.height=3, fig.width=10}
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
# --- plot rpart model
rpart.plot::prp(fit_tree$fit,
type = 3, # draw separate split labels; for left & right directions
ni = T, # display node indeces
nn = T, # display node numbers
box.palette = "RdBu") # palette to colour node boxes
